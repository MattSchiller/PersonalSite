@import "../menu";
@import "../simType";

@mixin indent-classes($indent-number) {
    @for $i from 1 through $indent-number {
        .indent#{$i} {
            text-indent: #{$i}em;
        }
    }
}

@include indent-classes(3);

.whole-line {
    display: inline-flex;
}

.line-break {
    color: transparent;
}

.sim-type {
    display: flex;
    flex-direction: column;
    justify-content: space-around;
}

@mixin generate-theme(
    $theme-name,
    $page-color,
    $default-text-color,
    $menu-unselected-color,
    $menu-selected-color,
    $menu-selected-background-color,
    $line-number-color,
    $current-line-color,
    $current-line-background-color,
    $comment-fade-color,
    $comment-color,
    $function-color,
    $link-color,
    $link-focus-color,
    $function-name-color,
    $arg-color,
    $reserved-color,
    $key-color,
    $default-typescript-color,
    $default-html-color,
    $default-yaml-color,
    $string-color,
    $flat-file-key-color,
    $symbol-color,
    $caret-color,
) {
    @include menu-colors(
        $theme-name: $theme-name,
        $unselected: $menu-unselected-color,
        $selected-background: $menu-selected-background-color,
        $selected: $menu-selected-color,
        $menu-background-color: rgb(70, 70, 70),
    );

    @include sim-type-colors(
        "typescript",
        $default-typescript-color
    );

    @include sim-type-colors(
        "html",
        $default-html-color
    );

    @include sim-type-colors(
        "yaml",
        $default-yaml-color
    );

    html {
        background-color: $page-color;
        color: $default-text-color;
    }

    .sim-type-#{$theme-name} {
        margin-top: 1em;
        & + & {
            margin-top: 0em;
        }

        .sim-type-caret {
            animation: blinking 0.9s infinite;
            margin-left: -0.25em;

            &.sim-type-quoting {
                margin-left: -0.6em;
            }
        }

        &.typing {
            .sim-type-caret {
                animation: none;
                color: $caret-color;
            }
        }

        @keyframes blinking {
            0% { color: $caret-color; }
            50% { color: transparent; }
            100% { color: $caret-color; }
        }

        a {
            color: $link-color;
            font-weight: bold;

            &:focus {
                color: $link-focus-color
            }
        }

        a, span {
            white-space: pre;
        }

        .line-number {
            user-select: none;
            font-size: 1em;
            justify-content: flex-start;
            margin-right: .5em;
            white-space: pre;
            color: $line-number-color;
        }

        .curr-line {
            // color: $current-line-color;
            // background-color: $current-line-background-color;

            .line-number {
                color: $current-line-color;
            }
        }

        .func {
            color: $function-color;
        }

        .function-name {
            color: $function-name-color;
        }

        .arg {
            color: $arg-color;
        }

        .key {
            color: $key-color;
        }

        .reserved {
            color: $reserved-color;
        }

        .string {
            color: $string-color;
        }

        .comment-fade {
            color: $comment-fade-color;
        }

        .comment {
            color: $comment-color;

            &.flat-file {
                font-style: italic;
            }
        }

        .flat-file-key {
            color: $flat-file-key-color;
        }

        .symbol {
            color: $symbol-color;
        }

        .tint-default {
            color: $default-typescript-color;
        }
    }
}
